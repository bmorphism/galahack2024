/// <reference types="node" />
import { FabloConfigJson as FabloConfig } from "./FabloConfigJson";
export { FabloConfig };
export declare function useDirectory(directory: string): Promise<void>;
export declare function useFabloConfig(directory: string, config: string | FabloConfig, overrideFn?: (_: FabloConfig) => FabloConfig): Promise<void>;
export declare function executeFabloCommand(directory: string, ...fabloCommand: string[]): Promise<Buffer>;
export declare class Fablo {
    private inProgress;
    private directory;
    private fabloConfig;
    private constructor();
    config(config: string | FabloConfig, overrideFn?: (_: FabloConfig) => FabloConfig): Fablo;
    defaultConfig(overrideFn?: (_: FabloConfig) => FabloConfig): Fablo;
    then(fn: () => void | Promise<void>): Fablo;
    execute(...command: string[]): Promise<Buffer>;
    static directory(directory: string): Fablo;
    static config(config: string | FabloConfig, overrideFn?: (_: FabloConfig) => FabloConfig): Fablo;
    static defaultConfig(overrideFn?: (_: FabloConfig) => FabloConfig): Fablo;
    static then(fn: () => void | Promise<void>): Fablo;
}
//# sourceMappingURL=index.d.ts.map