"use strict";
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*
 * Copyright (c) Gala Games Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const api_1 = require("@gala-chain/api");
const bignumber_js_1 = tslib_1.__importDefault(require("bignumber.js"));
const users_1 = tslib_1.__importDefault(require("./users"));
const utils_1 = require("./utils");
process.env.GALA_TOKEN_CLASS_COLLECTION = (_a = process.env.GALA_TOKEN_CLASS_COLLECTION) !== null && _a !== void 0 ? _a : "TEST";
process.env.GALA_TOKEN_CLASS_CATEGORY = (_b = process.env.GALA_TOKEN_CLASS_CATEGORY) !== null && _b !== void 0 ? _b : "Currency";
process.env.GALA_TOKEN_CLASS_TYPE = (_c = process.env.GALA_TOKEN_CLASS_TYPE) !== null && _c !== void 0 ? _c : "TEST";
process.env.GALA_TOKEN_CLASS_ADDITIONAL_KEY = (_d = process.env.GALA_TOKEN_CLASS_ADDITIONAL_KEY) !== null && _d !== void 0 ? _d : "none";
const tokenClassKeyPlain = (0, utils_1.createPlainFn)({
    collection: process.env.GALA_TOKEN_CLASS_COLLECTION,
    category: process.env.GALA_TOKEN_CLASS_CATEGORY,
    type: process.env.GALA_TOKEN_CLASS_TYPE,
    additionalKey: process.env.GALA_TOKEN_CLASS_ADDITIONAL_KEY
});
const tokenClassPlain = (0, utils_1.createPlainFn)({
    ...tokenClassKeyPlain(),
    description: "Generated via automated test suite.",
    decimals: 10,
    image: "https://app.gala.games/test-image-placeholder-url.png",
    isNonFungible: false,
    maxCapacity: new bignumber_js_1.default(100000000000000),
    maxSupply: new bignumber_js_1.default(100000000000000),
    name: "AUTOMATEDTESTCOIN",
    network: api_1.GC_NETWORK_ID,
    symbol: "AUTC",
    totalBurned: new bignumber_js_1.default(0),
    totalMintAllowance: new bignumber_js_1.default(0),
    totalSupply: new bignumber_js_1.default(0),
    authorities: [users_1.default.testAdminId]
});
const tokenAllowancePlain = (txUnixTime) => ({
    ...tokenClassKeyPlain(),
    allowanceType: 4,
    quantity: new bignumber_js_1.default(1000000000000),
    quantitySpent: new bignumber_js_1.default(0),
    created: txUnixTime,
    expires: 0,
    instance: new bignumber_js_1.default(0),
    grantedBy: users_1.default.testAdminId,
    grantedTo: users_1.default.testAdminId,
    uses: new bignumber_js_1.default(1),
    usesSpent: new bignumber_js_1.default(0)
});
const tokenBurnAllowancePlain = (txUnixTime) => ({
    ...tokenClassKeyPlain(),
    allowanceType: 6,
    quantity: new bignumber_js_1.default(1),
    quantitySpent: new bignumber_js_1.default(0),
    created: txUnixTime,
    expires: 0,
    instance: new bignumber_js_1.default(0),
    grantedBy: users_1.default.testUser1Id,
    grantedTo: users_1.default.testUser2Id,
    uses: new bignumber_js_1.default(1),
    usesSpent: new bignumber_js_1.default(0)
});
const tokenInstanceKeyPlain = (0, utils_1.createPlainFn)({
    ...tokenClassKeyPlain(),
    instance: new bignumber_js_1.default(0)
});
const tokenInstancePlain = (0, utils_1.createPlainFn)({
    ...tokenInstanceKeyPlain(),
    isNonFungible: false
});
const tokenBalancePlain = (0, utils_1.createPlainFn)({
    ...tokenClassKeyPlain(),
    owner: users_1.default.testUser1Id,
    inUseHolds: [],
    lockedHolds: [],
    instanceIds: [],
    quantity: new bignumber_js_1.default("1000")
});
const tokenBurnPlain = (txUnixTime) => ({
    ...tokenInstanceKeyPlain(),
    burnedBy: users_1.default.testUser1Id,
    created: txUnixTime,
    quantity: new bignumber_js_1.default(1)
});
const tokenBurnCounterPlain = (txUnixTime, timeKey, epoch, totalKnownBurnsCount) => ({
    ...tokenBurnPlain(txUnixTime),
    timeKey,
    epoch,
    totalKnownBurnsCount
});
exports.default = {
    tokenClassKeyPlain,
    tokenClassKey: (0, utils_1.createInstanceFn)(api_1.TokenClassKey, tokenClassKeyPlain()),
    tokenClassPlain: tokenClassPlain,
    tokenClass: (0, utils_1.createInstanceFn)(api_1.TokenClass, tokenClassPlain()),
    tokenAllowancePlain,
    tokenAllowance: (0, utils_1.createInstanceFn)(api_1.TokenAllowance, tokenAllowancePlain(1)),
    tokenBurnAllowancePlain,
    tokenBurnAllowance: (0, utils_1.createInstanceFn)(api_1.TokenAllowance, tokenBurnAllowancePlain(1)),
    tokenInstanceKeyPlain,
    tokenInstanceKey: (0, utils_1.createInstanceFn)(api_1.TokenInstanceKey, tokenInstanceKeyPlain()),
    tokenInstancePlain,
    tokenInstance: (0, utils_1.createInstanceFn)(api_1.TokenInstance, tokenInstancePlain()),
    tokenBalancePlain,
    tokenBalance: (0, utils_1.createInstanceFn)(api_1.TokenBalance, tokenBalancePlain()),
    tokenBurnPlain,
    tokenBurn: (0, utils_1.createInstanceFn)(api_1.TokenBurn, tokenBurnPlain(1)),
    tokenBurnCounterPlain
};
//# sourceMappingURL=currency.js.map