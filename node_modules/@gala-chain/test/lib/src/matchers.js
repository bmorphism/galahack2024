"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transactionErrorMessageContains = exports.transactionErrorCode = exports.transactionErrorKey = exports.transactionError = exports.transactionSuccess = void 0;
/*
 * Copyright (c) Gala Games Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const api_1 = require("@gala-chain/api");
const globals_1 = require("@jest/globals");
function transactionSuccess(payload) {
    if (payload === undefined) {
        return globals_1.expect.objectContaining({ Status: api_1.GalaChainResponseType.Success });
    }
    else {
        return globals_1.expect.objectContaining({ Status: api_1.GalaChainResponseType.Success, Data: payload });
    }
}
exports.transactionSuccess = transactionSuccess;
function transactionError(matcher) {
    if (matcher === undefined) {
        return globals_1.expect.objectContaining({ Status: api_1.GalaChainResponseType.Error });
    }
    if (matcher instanceof api_1.ChainError) {
        return globals_1.expect.objectContaining({
            Status: api_1.GalaChainResponseType.Error,
            Message: matcher.message,
            ErrorCode: matcher.code,
            ErrorKey: matcher.key,
            ErrorPayload: matcher.payload
        });
    }
    return globals_1.expect.objectContaining({ Status: api_1.GalaChainResponseType.Error, Message: matcher });
}
exports.transactionError = transactionError;
function transactionErrorKey(key) {
    return globals_1.expect.objectContaining({
        ErrorKey: key,
        Status: api_1.GalaChainResponseType.Error
    });
}
exports.transactionErrorKey = transactionErrorKey;
function transactionErrorCode(code) {
    return globals_1.expect.objectContaining({
        ErrorCode: code,
        Status: api_1.GalaChainResponseType.Error
    });
}
exports.transactionErrorCode = transactionErrorCode;
function transactionErrorMessageContains(s) {
    return globals_1.expect.objectContaining({
        Message: globals_1.expect.stringContaining(s),
        Status: api_1.GalaChainResponseType.Error
    });
}
exports.transactionErrorMessageContains = transactionErrorMessageContains;
//# sourceMappingURL=matchers.js.map