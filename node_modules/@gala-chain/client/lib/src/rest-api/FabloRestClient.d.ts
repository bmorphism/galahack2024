import { ChainCallDTO, GalaChainResponse, Inferred } from "@gala-chain/api";
import { ChainClient, ChainClientBuilder, ClassType, ContractConfig } from "../generic";
import { RestApiAdminCredentials, SetContractApiParams } from "./GlobalRestApiConfig";
import { RestApiConfig } from "./loadRestApiConfig";
export declare class FabloRestClient extends ChainClient {
    private readonly credentials;
    private token;
    private readonly restApiUrl;
    constructor(builder: Promise<ChainClientBuilder>, restApiUrl: string, contractConfig: ContractConfig, credentials: RestApiAdminCredentials, token: Promise<string>, orgMsp: string);
    isReady(): Promise<true>;
    disconnect(): Promise<void>;
    submitTransaction<T>(method: string, dtoOrResp?: ChainCallDTO | ClassType<Inferred<T>>, resp?: ClassType<Inferred<T>>): Promise<GalaChainResponse<T>>;
    evaluateTransaction<T>(method: string, dtoOrResp?: ChainCallDTO | ClassType<Inferred<T>>, resp?: ClassType<Inferred<T>>): Promise<GalaChainResponse<T>>;
    private post;
    static enroll(restApiUrl: string, userId: string, secret: string): Promise<string>;
    forUser(userId: string, secret?: string): ChainClient;
    static getContractApis(token: string, restApiUrl: string, restApiConfig: RestApiConfig): Promise<SetContractApiParams[]>;
}
