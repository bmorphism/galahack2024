import { FabloConfig } from "fablo";
import BaseCommand from "../../base-command";
export interface SingleArg {
    channel: string;
    channelType: "curator" | "partner";
    chaincodeName: string;
    chaincodeDir: string | undefined;
}
export default class NetworkUp extends BaseCommand<typeof NetworkUp> {
    static aliases: string[];
    static description: string;
    static examples: string[];
    static flags: {
        channel: import("@oclif/core/lib/interfaces").OptionFlag<string[], import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        channelType: import("@oclif/core/lib/interfaces").OptionFlag<string[], import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        chaincodeName: import("@oclif/core/lib/interfaces").OptionFlag<string[], import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        chaincodeDir: import("@oclif/core/lib/interfaces").OptionFlag<string[], import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        fabloRoot: import("@oclif/core/lib/interfaces").OptionFlag<string, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        envConfig: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        watch: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        contracts: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
    };
    run(): Promise<void>;
}
export declare function createConfigtxProfiles(args: SingleArg[]): string;
export declare function updatedFabloConfig(initialCfg: FabloConfig, fabloRoot: string, args: SingleArg[]): FabloConfig;
