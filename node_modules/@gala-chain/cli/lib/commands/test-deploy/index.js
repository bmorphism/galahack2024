"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*
 * Copyright (c) Gala Games Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const core_1 = require("@oclif/core");
const base_command_1 = tslib_1.__importDefault(require("../../base-command"));
const galachain_utils_1 = require("../../galachain-utils");
class TestDeploy extends base_command_1.default {
    async run() {
        const { args } = await this.parse(TestDeploy);
        const developerPrivateKey = await (0, galachain_utils_1.getPrivateKey)(args.developerPrivateKey);
        if (!developerPrivateKey) {
            await this.config.runCommand("deploy", ["--testnet"]);
        }
        else {
            await this.config.runCommand("deploy", [args.imageTag, developerPrivateKey, "--testnet"]);
        }
    }
}
TestDeploy.description = "Schedules deployment of published chaincode Docker image to GalaChain testnet.";
TestDeploy.examples = [
    "galachain test-deploy registry.image.name:latest",
    "galachain test-deploy registry.image.name:latest ./private-key",
    "galachain test-deploy registry.image.name:latest c0fb1924408d936fb7cd0c86695885df4f66861621b5c8660df3924c4d09dd79"
];
TestDeploy.args = {
    imageTag: core_1.Args.string({
        char: "i",
        description: "Image tag to deploy. It should follow the pattern imageName:version.",
        required: true
    }),
    developerPrivateKey: core_1.Args.string({
        char: "k",
        description: "Optional private key to sign the data. It could be a file or a string. " +
            "If not provided, the private key will be read from the environment variable DEV_PRIVATE_KEY.",
        required: false
    })
};
exports.default = TestDeploy;
