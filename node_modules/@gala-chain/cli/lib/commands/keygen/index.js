"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*
 * Copyright (c) Gala Games Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const core_1 = require("@oclif/core");
const secp = tslib_1.__importStar(require("@noble/secp256k1"));
const promises_1 = require("node:fs/promises");
const base_command_1 = tslib_1.__importDefault(require("../../base-command"));
class Keygen extends base_command_1.default {
    async run() {
        const { args } = await this.parse(Keygen);
        const privateKey = secp.utils.bytesToHex(secp.utils.randomPrivateKey());
        const publicKey = secp.utils.bytesToHex(secp.getPublicKey(privateKey));
        const file = args.file;
        this.log(`Writing keys to ${file}`);
        this.log(`public key... ${file}.pub`);
        await (0, promises_1.writeFile)(`${file}.pub`, publicKey.toString());
        this.log(`private key... ${args.file}`);
        await (0, promises_1.writeFile)(file, privateKey.toString());
    }
}
Keygen.description = `Generate a Public / Private key signing pair for Chain DTO (Data Transfer Object) signatures. ` +
    `Uses ${"`@noble/secp256k1`"} npm library under-the-hood. ` +
    `Always handle private keys with the utmost care.`;
Keygen.examples = ["galachain keygen data/user1"];
Keygen.args = {
    file: core_1.Args.string({
        required: true,
        char: "f",
        description: 'Output file path for private key. Public key will be written alongside it with ".pub" suffix. '
    })
};
exports.default = Keygen;
