import { AllowanceType, GrantAllowanceQuantity, TokenAllowance, TokenClass, TokenInstanceQueryKey, TokenMintAllowance, TokenMintAllowanceRequest } from "@gala-chain/api";
import { BigNumber } from "bignumber.js";
import { GalaChainContext } from "../types/GalaChainContext";
export declare function ensureQuantityCanBeMinted(tokenClass: TokenClass, quantity: BigNumber, totalKnownMintAllowanceCount?: BigNumber, totalKnownBurnsCount?: BigNumber): boolean;
export interface GrantAllowanceParams {
    tokenInstance: TokenInstanceQueryKey;
    allowanceType: AllowanceType;
    quantities: Array<GrantAllowanceQuantity>;
    uses: BigNumber;
    expires: number;
}
export declare function putMintAllowanceRequestsOnChain(ctx: GalaChainContext, { quantities, uses, expires }: Omit<GrantAllowanceParams, "tokenInstance">, tokenClass: TokenClass, knownMintAllowanceSupply: BigNumber): Promise<TokenMintAllowanceRequest[]>;
export interface PutMintAllowancesOnChainParams {
    mintAllowanceRequests: Array<TokenMintAllowanceRequest>;
}
export declare function putMintAllowancesOnChain(ctx: GalaChainContext, { mintAllowanceRequests }: PutMintAllowancesOnChainParams, tokenClass: TokenClass, knownMintAllowanceSupply: BigNumber): Promise<TokenMintAllowance[]>;
export declare function grantAllowance(ctx: GalaChainContext, { tokenInstance: tokenInstanceQueryKey, allowanceType, quantities, uses, expires }: GrantAllowanceParams): Promise<TokenAllowance[]>;
export declare function preventDuplicateAllowance(ctx: GalaChainContext, tokenAllowance: TokenAllowance): Promise<void>;
export declare function allowanceIsUseable(ctx: GalaChainContext, tokenAllowance: TokenAllowance): boolean;
