"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchAllowancesWithPagination = exports.fetchAllowances = void 0;
/*
 * Copyright (c) Gala Games Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const api_1 = require("@gala-chain/api");
const utils_1 = require("../utils");
const utils_2 = require("../utils");
// This will return the list sorted by creation date descending (oldest first)
// If the "From Filter" is applied, it will filter the results
async function fetchAllowances(ctx, data) {
    var _a;
    const queryParams = (0, utils_2.takeUntilUndefined)(data.grantedTo, data.collection, data.category, data.type, data.additionalKey, data.instance, (_a = data.allowanceType) === null || _a === void 0 ? void 0 : _a.toString());
    const getObjectsResponse = await (0, utils_1.getObjectsByPartialCompositeKey)(ctx, api_1.TokenAllowance.INDEX_KEY, queryParams, api_1.TokenAllowance);
    const results = filterByGrantedBy(getObjectsResponse, data.grantedBy);
    sort(results);
    return results;
}
exports.fetchAllowances = fetchAllowances;
async function fetchAllowancesWithPagination(ctx, data) {
    var _a;
    const queryParams = (0, utils_2.takeUntilUndefined)(data.grantedTo, data.collection, data.category, data.type, data.additionalKey, data.instance, (_a = data.allowanceType) === null || _a === void 0 ? void 0 : _a.toString());
    const getObjectsResponse = await (0, utils_1.getObjectsByPartialCompositeKeyWithPagination)(ctx, api_1.TokenAllowance.INDEX_KEY, queryParams, api_1.TokenAllowance, data.bookmark, data.limit);
    const response = new api_1.FetchAllowancesResponse();
    response.nextPageBookmark = getObjectsResponse.metadata.bookmark;
    response.results = filterByGrantedBy(getObjectsResponse.results, data.grantedBy);
    sort(response.results);
    return response;
}
exports.fetchAllowancesWithPagination = fetchAllowancesWithPagination;
// Sort the items descending by date
function sort(results) {
    results.sort((a, b) => (a.created < b.created ? -1 : 1));
}
function filterByGrantedBy(results, grantedBy) {
    if (grantedBy) {
        return results.filter((x) => x.grantedBy === grantedBy);
    }
    else {
        return results;
    }
}
