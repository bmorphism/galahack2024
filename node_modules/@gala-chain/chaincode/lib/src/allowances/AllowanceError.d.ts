import { AllowanceType, ConflictError, DefaultError, ForbiddenError, NotFoundError, TokenAllowance, TokenInstanceKey, ValidationFailedError } from "@gala-chain/api";
import { BigNumber } from "bignumber.js";
export declare class BalanceNotFoundError extends NotFoundError {
    constructor(user: string);
}
export declare class DuplicateUserError extends ValidationFailedError {
    constructor(users: string[]);
}
export declare class InvalidTokenOwnerError extends ValidationFailedError {
    constructor(callingUser: string, tokenInstanceKey: string, allowanceType: string, owner: string | undefined);
}
export declare class InsufficientTokenBalanceError extends ValidationFailedError {
    constructor(callingUser: string, tokenInstanceKey: string, allowanceType: string, userBalance: BigNumber, allowanceQuantity: BigNumber, lockedQuantity: BigNumber);
}
export declare class DuplicateAllowanceError extends ConflictError {
    constructor(allowanceKey: string, payload: Record<string, unknown>);
}
export declare class InvalidMintError extends ValidationFailedError {
    constructor(msg: string);
}
export declare class MintCapacityExceededError extends ValidationFailedError {
    constructor(tokenClassKey: string, maxCapacity: BigNumber, quantity: BigNumber);
}
export declare class TotalSupplyExceededError extends ValidationFailedError {
    constructor(tokenClassKey: string, maxSupply: BigNumber, quantity: BigNumber);
}
export declare class UnauthorizedAllowanceRefreshError extends ForbiddenError {
    constructor(user: string, grantedBy: string);
}
export declare class InsufficientAllowanceError extends ValidationFailedError {
    constructor(user: string, allowedQuantity: BigNumber, allowanceType: AllowanceType, quantity: BigNumber, tokenInstanceKey: TokenInstanceKey, grantedBy: string);
}
export declare class GrantAllowanceFailedError extends DefaultError {
    constructor(errors: Array<{
        message: string;
        payload: Record<string, unknown>;
    }>);
}
export declare class AllowanceUsersMismatchError extends ValidationFailedError {
    constructor(allowance: TokenAllowance, expectedGrantedBy: string, expectedGrantedTo: string);
}
