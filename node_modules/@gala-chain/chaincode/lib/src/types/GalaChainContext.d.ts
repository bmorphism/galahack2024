import { TraceContext } from "@gala-chain/api";
import { Context } from "fabric-contract-api";
import { ChaincodeStub } from "fabric-shim";
import { SpanContext } from "opentracing";
import { GalaChainStub } from "./GalaChainStub";
import { GalaLoggerInstance } from "./GalaLoggerInstance";
export declare function createDDCompatibleSpanContext({ spanId, traceId }: TraceContext, name: string): SpanContext;
export declare function traceContextFromDtoString(s: string): TraceContext | undefined;
export declare function traceContextFromTransientData(transientMap: Map<string, Uint8Array>): TraceContext | undefined;
export declare function getParentSpanContext(stub: ChaincodeStub): SpanContext | undefined;
export declare class GalaChainContext extends Context {
    stub: GalaChainStub;
    span?: SpanContext;
    private callingUserValue?;
    private callingUserEthAddressValue?;
    private txUnixTimeValue?;
    private loggerInstance?;
    get logger(): GalaLoggerInstance;
    get callingUser(): string;
    get callingUserEthAddress(): string;
    set callingUserData(d: {
        alias: string;
        ethAddress: string | undefined;
    });
    get txUnixTime(): number;
    setChaincodeStub(stub: ChaincodeStub): void;
}
