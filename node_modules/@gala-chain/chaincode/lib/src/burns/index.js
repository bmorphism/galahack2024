"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NftMultipleBurnNotAllowedError = exports.InsufficientBalanceError = exports.UseAllowancesFailedError = exports.InsufficientBurnAllowanceError = exports.BurnTokensFailedError = exports.fetchKnownBurnCount = exports.fetchBurns = exports.burnTokens = void 0;
/*
 * Copyright (c) Gala Games Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const BurnError_1 = require("./BurnError");
Object.defineProperty(exports, "BurnTokensFailedError", { enumerable: true, get: function () { return BurnError_1.BurnTokensFailedError; } });
Object.defineProperty(exports, "InsufficientBalanceError", { enumerable: true, get: function () { return BurnError_1.InsufficientBalanceError; } });
Object.defineProperty(exports, "InsufficientBurnAllowanceError", { enumerable: true, get: function () { return BurnError_1.InsufficientBurnAllowanceError; } });
Object.defineProperty(exports, "NftMultipleBurnNotAllowedError", { enumerable: true, get: function () { return BurnError_1.NftMultipleBurnNotAllowedError; } });
Object.defineProperty(exports, "UseAllowancesFailedError", { enumerable: true, get: function () { return BurnError_1.UseAllowancesFailedError; } });
const burnTokens_1 = require("./burnTokens");
Object.defineProperty(exports, "burnTokens", { enumerable: true, get: function () { return burnTokens_1.burnTokens; } });
const fetchBurns_1 = require("./fetchBurns");
Object.defineProperty(exports, "fetchBurns", { enumerable: true, get: function () { return fetchBurns_1.fetchBurns; } });
Object.defineProperty(exports, "fetchKnownBurnCount", { enumerable: true, get: function () { return fetchBurns_1.fetchKnownBurnCount; } });
