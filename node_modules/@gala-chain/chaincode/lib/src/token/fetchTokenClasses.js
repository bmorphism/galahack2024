"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchTokenClassesWithPagination = exports.fetchTokenClass = exports.fetchTokenClasses = void 0;
/*
 * Copyright (c) Gala Games Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const api_1 = require("@gala-chain/api");
const class_transformer_1 = require("class-transformer");
const utils_1 = require("../utils");
const TokenError_1 = require("./TokenError");
async function fetchTokenClasses(ctx, tokenClasses) {
    const fetchOps = tokenClasses.map((c) => (0, utils_1.getObjectByKey)(ctx, api_1.TokenClass, api_1.TokenClass.buildTokenClassCompositeKey(c)).catch(() => {
        throw new TokenError_1.TokenClassNotFoundError(c.toStringKey());
    }));
    return await Promise.all(fetchOps);
}
exports.fetchTokenClasses = fetchTokenClasses;
async function fetchTokenClass(ctx, tokenClassKey) {
    const tokenClass = await (0, utils_1.getObjectByKey)(ctx, api_1.TokenClass, api_1.TokenClass.buildTokenClassCompositeKey(tokenClassKey)).catch(() => {
        throw new TokenError_1.TokenClassNotFoundError(tokenClassKey.toStringKey());
    });
    return tokenClass;
}
exports.fetchTokenClass = fetchTokenClass;
async function fetchTokenClassesWithPagination(ctx, dto) {
    var _a;
    const queryParams = (0, utils_1.takeUntilUndefined)(dto.collection, dto.category, dto.type, dto.additionalKey);
    const getObjectsResponse = await (0, utils_1.getObjectsByPartialCompositeKeyWithPagination)(ctx, api_1.TokenClass.INDEX_KEY, queryParams, api_1.TokenClass, dto.bookmark, (_a = dto.limit) !== null && _a !== void 0 ? _a : api_1.FetchTokenClassesWithPaginationDto.DEFAULT_LIMIT);
    const response = (0, class_transformer_1.plainToInstance)(api_1.FetchTokenClassesResponse, {
        results: getObjectsResponse.results,
        nextPageBookmark: getObjectsResponse.metadata.bookmark
    });
    return response;
}
exports.fetchTokenClassesWithPagination = fetchTokenClassesWithPagination;
