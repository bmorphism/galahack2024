"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateTokenClass = void 0;
/*
 * Copyright (c) Gala Games Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const api_1 = require("@gala-chain/api");
const state_1 = require("../utils/state");
const TokenError_1 = require("./TokenError");
async function updateTokenClass(ctx, params) {
    // dto is valid, create an instance from the dto and validate the conversion
    const tokenKeyCheck = new api_1.TokenClass();
    tokenKeyCheck.collection = params.tokenClass.collection;
    tokenKeyCheck.category = params.tokenClass.category;
    tokenKeyCheck.type = params.tokenClass.type;
    tokenKeyCheck.additionalKey = params.tokenClass.additionalKey;
    const compositeKey = tokenKeyCheck.getCompositeKey();
    const existingToken = await (0, state_1.getObjectByKey)(ctx, api_1.TokenClass, compositeKey).catch(async () => {
        const keyString = (await tokenKeyCheck.getKey()).toStringKey();
        throw new TokenError_1.TokenClassNotFoundError(keyString);
    });
    if (!existingToken.authorities.includes(ctx.callingUser)) {
        throw new TokenError_1.NotATokenAuthorityError(ctx.callingUser, compositeKey, existingToken.authorities);
    }
    const updatedToken = existingToken.updatedWith(params);
    await updatedToken.validateOrReject();
    await (0, state_1.putChainObject)(ctx, updatedToken);
    const tokenId = await api_1.TokenClass.buildClassKeyObject(updatedToken);
    return tokenId;
}
exports.updateTokenClass = updateTokenClass;
