import { ContractAPI, GalaChainResponse, GetObjectDto, GetObjectHistoryDto } from "@gala-chain/api";
import { Contract } from "fabric-contract-api";
import { GalaChainContext } from "../types";
export declare abstract class GalaContract extends Contract {
    private readonly version;
    /**
     * @param name Contract name
     * @param version Contract version. The actual value should be defined in the child
     *    * class, and should be taken from package.json. If you extend contract class
     *    * that extends GalaContract, you should also override version.
     */
    constructor(name: string, version: string);
    getVersion(): string;
    createContext(): GalaChainContext;
    beforeTransaction(ctx: GalaChainContext): Promise<void>;
    aroundTransaction(ctx: GalaChainContext, fn: Function, parameters: unknown): Promise<void>;
    afterTransaction(ctx: GalaChainContext, result: unknown): Promise<void>;
    GetChaincodeVersion(ctx: GalaChainContext): Promise<GalaChainResponse<string>>;
    GetContractAPI(ctx: GalaChainContext): Promise<GalaChainResponse<ContractAPI>>;
    GetObjectByKey(ctx: GalaChainContext, dto: GetObjectDto): Promise<GalaChainResponse<Record<string, unknown>>>;
    GetObjectHistory(ctx: GalaChainContext, dto: GetObjectHistoryDto): Promise<GalaChainResponse<Record<string, unknown>>>;
}
