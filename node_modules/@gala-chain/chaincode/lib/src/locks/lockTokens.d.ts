import { AuthorizedOnBehalf, TokenBalance, TokenClassKey, TokenInstanceKey } from "@gala-chain/api";
import { BigNumber } from "bignumber.js";
import { GalaChainContext } from "../types";
export interface TokenQuantity {
    tokenInstanceKey: TokenInstanceKey;
    quantity: BigNumber;
    owner?: string;
}
export interface LockTokenParams {
    owner: string | undefined;
    lockAuthority: string | undefined;
    tokenInstanceKey: TokenInstanceKey;
    quantity: BigNumber;
    allowancesToUse: string[];
    expires: number;
    name: string | undefined;
    verifyAuthorizedOnBehalf: (c: TokenClassKey) => Promise<AuthorizedOnBehalf | undefined>;
}
export declare function lockToken(ctx: GalaChainContext, { owner: optionalOwner, lockAuthority, tokenInstanceKey, quantity, allowancesToUse, name, expires, verifyAuthorizedOnBehalf }: LockTokenParams): Promise<TokenBalance>;
export interface LockTokensParams {
    tokenInstances: TokenQuantity[];
    allowancesToUse: string[];
    name: string | undefined;
    lockAuthority: string | undefined;
    expires: number;
    verifyAuthorizedOnBehalf: (c: TokenClassKey) => Promise<AuthorizedOnBehalf | undefined>;
}
export declare function lockTokens(ctx: GalaChainContext, { tokenInstances, allowancesToUse, name, lockAuthority, expires, verifyAuthorizedOnBehalf }: LockTokensParams): Promise<TokenBalance[]>;
